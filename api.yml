#Test with: http://editor.swagger.io/

swagger: '2.0'
info:
  version: 1.0.0
  title: Microservice for Image upload and visualization
  description: JavaScript + Redis
  license:
    name: Software Architecture 2018-II
host: 192.168.99.101:3000
basePath: /image/
schemes:
  - http
consumes:
  - multipart/form-data
produces:
  - multipart/form-data
paths:
  /image:
    post:
      summary: Stores new image
      operationId: storeImage
      parameters:
        - name: image
          in: formData
          required: true
          description: Image form
          schema:
            $ref: '#/definitions/ImageInput'
        - name: project
          in: formData
          required: true
          description: String
        - name: version
          in: formData
          required: true
          description: String
        - name: page
          in: formData
          required: true
          description: String
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /image/{id}:
    get:
      summary: Returns a image with the given code
      operationId: getImageByCode
      parameters:
        - name: id
          in: path
          description: The code of the image to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/image'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    put:
      summary: Updates a image with the given code
      operationId: updateImage
      parameters:
        - name: id
          in: path
          description: The code of the course to be updated
          required: true
          type: integer
        - name: image
          in: formData
          required: true
          description: Image form
          schema:
            $ref: '#/definitions/ImageInput'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/image'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    delete:
      summary: Deletes a image with the given code
      operationId: deleteImage
      parameters:
        - name: id
          in: path
          description: The code of the image to be deleted
          required: true
          type: integer
      responses:
        '200':
          description: Ok
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

definitions:

  # Courses
  image:
    type: object
    properties:
      name:
        type: string
      data:
        type: number
      encoding:
        type: string
      type:
        type: string

  ImageInput:
    type: object
    properties:
      file:
        type: object
      project:
        type: string
      version:
        type: integer
      page:
        type: integer



# Errors
  ErrorModel:
    type: object
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: number
      description:
        type: object
